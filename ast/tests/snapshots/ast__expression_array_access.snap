---
source: ast/tests/ast.rs
expression: ast
---
(
    AstRecursiveExpression {
        range: AstRange {
            start: AstPoint {
                line: 0,
                col: 0,
            },
            end: AstPoint {
                line: 0,
                col: 10,
            },
        },
        ident: Some(
            Identifier(
                AstIdentifier {
                    range: AstRange {
                        start: AstPoint {
                            line: 0,
                            col: 0,
                        },
                        end: AstPoint {
                            line: 0,
                            col: 7,
                        },
                    },
                    value: "numbers",
                },
            ),
        ),
        values: None,
        next: Some(
            AstRecursiveExpression {
                range: AstRange {
                    start: AstPoint {
                        line: 0,
                        col: 7,
                    },
                    end: AstPoint {
                        line: 0,
                        col: 10,
                    },
                },
                ident: Some(
                    ArrayAccess(
                        Nuget(
                            Int(
                                AstInt {
                                    range: AstRange {
                                        start: AstPoint {
                                            line: 0,
                                            col: 8,
                                        },
                                        end: AstPoint {
                                            line: 0,
                                            col: 9,
                                        },
                                    },
                                    value: 0,
                                },
                            ),
                        ),
                    ),
                ),
                values: None,
                next: None,
                operator: None,
            },
        ),
        operator: None,
    },
    4,
)
