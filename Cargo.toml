[package]
name = "java_lsp"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[workspace]
members = [
    "parser",
    "maven",
    "server",
    "tree-sitter-util",
    "format",
    "gradle",
    "common",
    "compile",
    "jdk",
    "config",
    "cli",
    "call_chain",
    "variables",
    "document",
    "tyres",
    "position",
    "imports",
]

[workspace.dependencies]
clap = { version = "4", features = ["derive"] }
classfile-parser = { git = "https://github.com/emilycares/classfile-parser.git" , branch = "fix/source_file" }
# classfile-parser = { path = "../classfile-parser"}
once_cell = "1.20.3"
dashmap = "6.0.1"
nickel-lang-core = { version = "0.12.0", default-features = false }
nom = "8.0.0"
postcard = { version = "1.0.0", features = ["alloc"] }
pretty_assertions = "1.4"
ropey = "1.6.1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.108"
tokio = { version = "1", features = ["full"] }
topiary-config = { git = "https://github.com/emilycares/topiary.git", branch = "new_lang_java", default-features = false, features = [
    "java",
    "parallel",
] }
topiary-core = { git = "https://github.com/emilycares/topiary.git", branch = "new_lang_java", default-features = false }
topiary-queries = { git = "https://github.com/emilycares/topiary.git", branch = "new_lang_java", default-features = false, features = [
    "java",
] }
lsp-server = "0.7.8"
lsp-types = "0.97.0"
tree-sitter = "0.25.3"
tree-sitter-java = { git = "https://github.com/emilycares/tree-sitter-java.git", branch = "fix_partial" }
walkdir = "2.5.0"
async_zip = { version = "0.0.17", features = ["full"] }
zip-extract = "0.3.0"
dirs = "6.0.0"
futures = "0.3.31"
streaming-iterator = "0.1.9"
itertools = "0.14.0"
parking_lot = "0.12.3"
rayon = "1.10"

[dependencies]
clap.workspace = true
tokio.workspace = true
document = { path = "./document" }
variables = { path = "./variables" }
cli = { path = "./cli" }
server = { path = "./server" }
common = { path = "./common" }
format = { path = "./format" }
